<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    
    <style>
        
        .bd-placeholder-img {
            font-size: 1.125rem;
            text-anchor: middle;
            -webkit-user-select: none;
            -moz-user-select: none;
            user-select: none;
        }

        @media (min-width: 768px) {
            .bd-placeholder-img-lg {
                font-size: 3.5rem;
            }
        }
        
    </style>

    <link rel='stylesheet' href='stylesheets/home.css' />
    <title>If-els Conditions</title>
</head>

<body>
    <!-- Narbar-->
    <%- include('../layouts/navbar') %>
    <!-- end of Narbar-->
    <!-- LEFT -->
    <%- include('../layouts/course-list') %>
    <!-- END OF LEFT-->

    <!-- MIDDLE 1 -->
    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <style>
        .breadcrumb {
            margin-bottom: 0;
            background-color: white;
            }
        .blockquote-footer {
            color:black;
        }
    </style>
    <a id="if_else"></a>
    <!-- MIDDLE 1 -->
    <div class="content">
        <div id = "content" class="container">
            <h1>Flow Control</h1>
    <!--   C Language -->
            <div class="accordion" id="accordionParentSyntax">
                <!--   Token -->
                <div id="collapseIntroduce" class="accordion-collapse collapse show" data-bs-parent="#accordionParentSyntax">
                    <h2 > if else</h2>
                    <!--   ## -->
                    <div class="box bg-light  mb-5 shadow" >
                        <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">
                            <h2 id = ''> if...else </h2>
                            <br>เราจะได้เรียนรู้เกี่ยวกับคำสั่ง if (รวมถึง if...else และ nested if..else) ในการเขียนโปรแกรม C  ตัวอย่างเช่น<br>
                            <h5><br>if Statement<br></h5>
                            <img src="https://drive.google.com/uc?id=1g_JPubg3b1ZeYq7K_gL_AT84Pfj6VXsm">
                            <h6><br>How if statement works?<br></h6>
                            <br>คำสั่ง if จะประเมินเงื่อนไขภายใน ()วงเล็บ หากเงื่อนไขเป็นจริงคำสั่งภายในของ if จะถูกดำเนินการ หากเงื่อนไขเป็นเท็จ คำสั่งภายในของ if จะไม่ถูกดำเนินการ<br>
                            <img src="https://drive.google.com/uc?id=1QwNCIyJjsML6F0gMmb46ah0poXGUEYo-">
                            <br>
                            <br>Example 1: if statement<br>
                            <img src="https://drive.google.com/uc?id=1ZzTkgJZLXsL002QTGeCCGb5Z2jvgqOow">
                            <br>Output<br>
                            <img src="https://drive.google.com/uc?id=1v8gPCO3yVD8JDat3kNyCWDFOxpReQqNM">
                            <br>เมื่อผู้ใช้ป้อน -2 นิพจน์การทดสอบ number < 0 จะเข้าเงื่อนไขเป็นจริง เพราะ -2 น้อยกว่า 0 ฉะนั้น -2 จะแสดงบนหน้าจอ<br>
                            <img src="https://drive.google.com/uc?id=17uiKG92LDd8An-G5_S6JYXlc0yFSo7jL">
                            <br>เมื่อผู้ใช้ป้อน 5 นิพจน์การทดสอบ number < 0 จะเข้าเงื่อนไขเป็นเท็จและคำสั่งภายใน if จะไม่ถูกดำเนินการ <br>
                            <h5><br>if...else Statement<br></h5>
                            <br>คำสั่งif อาจมี else บล็อกที่เป็นตัวเลือก ไวยากรณ์ของ if..else คำสั่งคือ<br>
                            <img src="https://drive.google.com/uc?id=1Liz0fWjPeobh8fIJrF0_-nWh8h9NxC-g">
                            <h6><br>How if...else statement works?<br></h6>
                            <br>หากนิพจน์ทดสอบว่าเงื่อนไขเป็นจริง<br>
                            <br>- คำสั่งภายในของ if จะถูกดำเนินการ<br>
                            <br>- คำสั่งภายในของ else จะถูกข้ามจากการดำเนินการ<br>
                            <br>หากนิพจน์การทดสอบว่าเงื่อนไขเป็นเท็จ<br>
                            <br>- คำสั่งภายในของ else จะถูกดำเนินการ<br>
                            <br>- คำสั่งภายในของ if จะถูกข้ามจากการดำเนินการ<br>
                            <img src="https://drive.google.com/uc?id=1iVlgNf2VzcgGeASCE0GKPOb3bIASw2NS">
                            <br>Example 2: if...else statement<br>
                            <img src="https://drive.google.com/uc?id=1it3G8mBaIk-inZ9k__34mrfa948EyRqx">
                            <br>Output<br>
                            <img src="https://drive.google.com/uc?id=1tVwC4-NfdLqSqWozoAWzJg_5p0N_64hc">
                            <br>เมื่อผู้ใช้ป้อน 7 นิพจน์ทดสอบ number%2==0 เงื่อนไขเป็นเท็จ ดังนั้นคำสั่งภายในของ else จึงถูกดำเนินการ<br>
                            <h5><br>if...else Ladder<br></h5>
                            <br>คำสั่ง if...else ดำเนินการสองเงื่อนไขที่แตกต่างกันขึ้นอยู่กับว่านิพจน์การทดสอบเป็นจริงหรือเท็จ สามารถมีเงื่อนไขได้มากกว่า 2 เงื่อนไข<br>
                            <br>Syntax of if...else Ladder<br>
                            <img src="https://drive.google.com/uc?id=1PxfwNq-APcsXi1kgsdPBmCtMLbP_uPmo">
                            <br>Example 3: C if...else Ladder<br>
                            <img src="https://drive.google.com/uc?id=1DMGBPzDUJrRoAufAxEogRFxiBc0YXuBe">
                            <br>Output<br>
                            <img src="https://drive.google.com/uc?id=1roxvRBe8Id8cLgItW-P_6yxuDBZCaKFS">
                            <br><br>
                            <iframe width="480" height="320" src="https://www.youtube.com/embed/NlhCe5ltUZQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                            <BR id="for_Loop">
                        </div>
                    </div>
            <br ></div>
            <!--   Semicolons -->
            <div id="collapseIntroduce" class="accordion-collapse collapse show" data-bs-parent="#accordionParentSyntax">
                <h2 >for Loop</h2>
                <!--   ## -->
                <div class="box bg-light  mb-5 shadow" >
                    <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">
                        <h2 id = 'Introduce'> For Loop </h2>
                        <br>ในบทนี้ จะได้เรียนรู้การสร้าง for loop ในการเขียนโปรแกรม C โดยใช้ตัวอย่าง<br>
                        <br>ในการเขียนโปรแกรม ใช้ลูปเพื่อทำซ้ำบล็อกของ code จนกว่าจะตรงตามเงื่อนไขที่ระบุ การเขียนโปรแกรม C มีลูปสามประเภท:<br>
                        <br>- For loop<br>
                        <br>- While loop<br>
                        <br>- Do…while loop<br>
                        <h5><br>The syntax of the for loop is<br></h5>
                        <img src="https://drive.google.com/uc?id=1Xmeh0_VGwyGoSBJNjtaVMkV1dErqBHoe">
                        <h5><br>How for loop works?<br></h5>
                        <br>- คำสั่งเริ่มต้นจะดำเนินการเพียงครั้งเดียว<br>
                        <br>- จากนั้นนิพจน์ทดสอบจะถูกตรวจสอบเงื่อนไข หากนิพจน์การทดสอบมีเงื่อนไขเป็นเท็จ การ for loop จะสิ้นสุดลง<br>
                        <br>- หากนิพจน์การทดสอบถูกตรวจสอบเงื่อนไขว่าเป็นจริง คำสั่งภายในของ for loop จะถูกดำเนินการ และตรวจสอบเงื่อนไขเรื่อยๆจนกว่าจะวนครบ<br>
                        <h5><br>for loop Flowchart<br></h5>
                        <img src="https://drive.google.com/uc?id=1LajQ4JMQ20ntFQmcmKMTl82kPSWhwFKM">
                        <br>Example 1: for loop<br>
                        <img src="https://drive.google.com/uc?id=1wxrp4KUwrhiKNZ59-_qX2hFKfOXl5Jub">
                        <br>Output<br>
                        <img src="https://drive.google.com/uc?id=1wxrp4KUwrhiKNZ59-_qX2hFKfOXl5Jub">
                        <br>1.เริ่มต้นเป็น 1<br>
                        <br>2.i < 11 มีการตรวจสอบเงื่อนไข เนื่องจาก 1 น้อยกว่า 11 เป็นจริงคำสั่งภายในของ for loop จึงถูกดำเนินการ จะพิมพ์ 1 (ค่าของ i) บนหน้าจอ.<br>
                        <br>3.คำสั่งอัพเดท ++i ถูกดำเนินการ ตอนนี้ค่าของ i จะเป็น 2 อีกครั้ง นิพจน์การทดสอบจะตรวจสอบเงื่อนไขว่าเป็นจริง <br> และดำเนินการคำสั่งของfor loop จะพิมพ์ 2 (ค่าของ i) บนหน้าจอ.<br>
                        <br>4.คำสั่งการอัพเดท จะดำเนินการและ ตรวจสอบเงื่อนไข ++i นิพจน์การทดสอบ i < 11 กระบวนการนี้ดำเนินต่อไปจนถึงค่า i กลายเป็น 11<br>
                        <br>5.เมื่อไหร่ค่า i กลายเป็น 11, i < 11 จะเป็นเท็จและ for loop จะสิ้นสุดลง<br>
                        <br>Example 2: for loop<br>
                        <img src="https://drive.google.com/uc?id=1ICmJa5ndxHwkV7fM0jkWnUN6rKugYgA6">
                        <br>Output<br>
                        <img src="https://drive.google.com/uc?id=1E0kgbtbUDXKZQJmGR0h5Gdb4rv7C2kEn">
                        <br>ค่าที่ป้อนโดยผู้ใช้จะถูกเก็บไว้ในตัวแปร num สมมติว่าผู้ใช้ป้อน 10<br>
                        ค่า count เริ่มต้นค่าเป็น 1 และตรวจสอบเงื่อนไข count<=num(1 น้อยกว่าหรือเท่ากับ 10) แล้วว่าเป็นจริง คำสั่งของ for loop จึงถูกดำเนินการและค่าของ sum จะเท่ากับ 1 <br>
                        <br>จากนั้น คำสั่ง ++count จะเปลี่ยนค่าcountจาก 1 เป็น 2 (บวกเพิ่มไป 1) จะถูกตรวจสอบเงื่อนไข และ 2 มีค่าน้อยกว่า 10เงื่อนไขจึงเป็นจริงและดำเนินการคำสั่งของfor loop ตอนนี้ค่า sum จะเท่ากับ 3 กระบวนการนี้ดำเนินต่อไปและคำนวณผลรวมจนกระทั่งค่า count เป็น 11 เงื่อนไขถูกตรวจสอบถูกเป็น 0 (เท็จ) และสิ้นสุดการวนซ้ำ จากนั้นค่าของ sum จะถูกพิมพ์บนหน้าจอ<br>
                        <br><br>
                        <iframe width="480" height="320" src="https://www.youtube.com/embed/SvGVcnwfZe8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                        <BR id="while_Loop">
                    </div>
                </div>
        <br></div>
            <!--   Comments -->
            <div id="collapseIntroduce" class="accordion-collapse collapse show" data-bs-parent="#accordionParentSyntax">
                <h2>while Loop</h2>
                <!--   ## -->
                <div class="box bg-light  mb-5 shadow" >
                    <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">
                        <h2 id = 'Introduce'> while and do...while Loop </h2>
                        <br>ในบทนี้ จะได้เรียนรู้การสร้าง while และ do...while ในการเขียนโปรแกรม C โดยใช้ตัวอย่าง
                        ในการเขียนโปรแกรม ใช้ loop เพื่อทำซ้ำบล็อกของโค้ดจนกว่าจะตรงตามเงื่อนไขที่ระบุ<br>
                        <br>การเขียนโปรแกรม C มีลูปสามประเภท<br>
                        <br>- For loop<br>
                        <br>- While loop<br>
                        <br>- Do…while loop<br>
                        <br>ก่อนหน้านี้เราได้เรียนรู้เกี่ยวกับ for loop ในบทนี้เราจะเรียนรู้เกี่ยวกับ while และ do..while loop<br>
                        <h5><br>The syntax of the while loop is<br></h5>
                        <br>- while loop ตรวจสอบเงื่อนไขใน testExpressionวงเล็บ()<br>
                        <br>- ถ้า testExpression เป็นจริงคำสั่งใน while loop จะถูกดำเนินการ แล้ว testExpression ตรวจสอบอีกครั้ง<br>
                        <br>- กระบวนการนี้ดำเนินต่อไปจนกว่า testExpression จะตรวจสอบเป็นเท็จ<br>
                        <br>- หาก testExpression เป็นเท็จการวนซ้ำจะสิ้นสุดลง<br>
                        <h5><br>Flowchart of while loop<br></h5>
                        <img src="https://drive.google.com/uc?id=1LCB5zg4Wp_uBRvEnl6wMaMmiTyuW-i9A">
                        <br>Example 1: while loop<br>
                        <img src="https://drive.google.com/uc?id=1YBoYKYYIsi6o2e0hoB4HYLuDueNq39Ya">
                        <br>Output<br>
                        <img src="https://drive.google.com/uc?id=1EDt0VKPxBzB7mNNZqVsEjgLVqxEOFg3g">
                        <br>ที่นี่เราได้เริ่มต้นฉันถึง 1<br>
                        <br>1.เมื่อ i = 1 ตรวจสอบเงื่อนไข i <= 5 เป็นจริง ดังนั้นคำสั่งของ while loopจึงถูกดำเนินการ แสดง 1 บนหน้าจอและค่าของ i เพิ่มขึ้น<br>
                        <br>2.ตอนนี้ i = 2 ตรวจสอบเงื่อนไข i <= 5 เป็นจริงอีกครั้ง คำสั่งของ loop ถูกดำเนินการอีกครั้ง แสดงค่าบนหน้าจอเป็น 2 และ i เพิ่มขึ้นเป็น 3<br>
                        <br>3.กระบวนการนี้ดำเนินต่อไปจนค่า i กลายเป็น 6 จากนั้นตรวจสอบเงื่อนไข i <= 5 จะเป็นเท็จและสิ้นสุดการวนซ้ำ<br>
                        <h5><br>do...while loop<br></h5>
                        <br>การ do..while loop คล้ายกับการทำwhile loop โดยมีความแตกต่างที่สำคัญอย่างหนึ่ง คำสั่งของdo...while loop ถูกดำเนินการอย่างน้อยหนึ่งครั้ง จากนั้นจึงเข้าเงื่อนไขตรวจสอบ<br>
                        <h5><br>The syntax of the do...while loop is<br></h5>
                        <img src="https://drive.google.com/uc?id=15I6Si2KE9aK6xlOb7pBa-o_hPHU_8gX_">
                        <h5><br>How do...while loop works?<br></h5>
                        <br>- คำสั่งของ do...while loop จะดำเนินการเพียงครั้งเดียว เท่านั้น testExpression จึงจะตรวจสอบ<br>
                        <br>- ถ้า testExpression เป็นจริง คำสั่งของ loop จะถูกดำเนินการอีกครั้งและ testExpression จะตรวจสอบอีกครั้ง<br>
                        <br>- กระบวนการนี้ดำเนินต่อไปจน testExpression กลายเป็นเท็จ<br>
                        <br>- หาก testExpression เป็นเท็จการวนซ้ำจะสิ้นสุดลง<br>
                        <h5><br>Flowchart of do...while Loop<br></h5>
                        <img src="https://drive.google.com/uc?id=1T9dlr6NtmjSbw2Z9qoG3anivAC9MJF3i">
                        <br>Example 2: do...while loop<br>
                        <img src="https://drive.google.com/uc?id=13LpbnBWJ5B1pNheP-CL5syfZyH-alvel">
                        <br>Output<br>
                        <img src="https://drive.google.com/uc?id=1jtoz-XGhLxFXevactF55DLGhYi4oUI41">
                        <br>ที่นี่เราใช้การdo...whileวนซ้ำเพื่อให้ผู้ใช้ป้อนตัวเลข วนซ้ำทำงานตราบเท่าที่หมายเลขอินพุตไม่ใช่ 0<br>
                        <br>การ do...while loop จะดำเนินการอย่างน้อยหนึ่งครั้ง กล่าวคือ การวนซ้ำครั้งแรกทำงานโดยไม่ตรวจสอบเงื่อนไข เงื่อนไขจะได้รับการตรวจสอบหลังจากการทำซ้ำครั้งแรกเท่านั้น<br>
                        <img src="https://drive.google.com/uc?id=1AfVrPsikf6gUTIKZyXFxTcwGRXWyXWlb">
                        <br>ดังนั้นถ้าอินพุตแรกเป็นตัวเลขที่ไม่ใช่ศูนย์ ตัวเลขนั้นจะถูกเพิ่มลงในค่า sum ตัวแปรและลูปยังคงวนซ้ำต่อไป กระบวนการนี้จะทำซ้ำจนกว่าผู้ใช้จะอินพุตค่า 0 เข้ามา<br>
                        <br>แต่ถ้าอินพุตแรกเป็น 0 จะไม่มีการวนซ้ำครั้งที่สองของลูปและ ค่า sum กลายเป็น 0.0<br>
                        <br><br>
                        <iframe width="480" height="320" src="https://www.youtube.com/embed/eXfeq7mj6PA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                     <BR id="break_and_continue">
                    </div>
                </div>
        <br></div>
        <!--   Identifier -->
            <div id="collapseIntroduce" class="accordion-collapse collapse show" data-bs-parent="#accordionParentSyntax">
                <h2>break and continue</h2>
                <!--   ## -->
                <div class="box bg-light  mb-5 shadow" >
                    <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">
                        <h2 id = 'Introduce'> break and continue </h2>
                        <br>เราเรียนรู้เกี่ยวกับ loop ในบทก่อนหน้านี้ ในบทนี้ เราจะเรียนรู้การใช้คำสั่ง break and continue โดยใช้ตัวอย่าง<br>
                        <h5><br>Break<br></h5>
                        <br>คำสั่ง break สิ้นสุดการวนซ้ำทันทีเมื่อพบ ไวยากรณ์ของมันคือ<br>
                        <img src="https://drive.google.com/uc?id=1DFtkJPyHD02d6UaG2G9mSkjmRsMWZpVH">
                        <br>คำสั่ง break มักใช้กับ if...else คำสั่งภายในลูป<br>
                        <h5><br>How break statement works?<br></h5>
                        <img src="https://drive.google.com/uc?id=1rLCLY3OdiIA0GG4k6tKrH-hzijaSTDvY">
                        <br>Example 1: break statement<br>
                        <img src="https://drive.google.com/uc?id=1TyuVzhkkhuQGLE8VjlTnIoYCtymt0l1O">
                        <br>Output<br>
                        <img src="https://drive.google.com/uc?id=1eoeIlkWmlYw5mhn-nQBVDiijmPU9Dy2R">
                        <br>โปรแกรมนี้คำนวณผลรวมสูงสุด 10 หมายเลข ทำไมสูงสุด 10 หมายเลข? เป็นเพราะ ถ้าผู้ใช้ป้อนค่าลบ คำสั่ง break จะทำงาน ซึ่งทำให้สิ้นสุด for loop และผลรวมจะแสดงค่าขึ้น<br>
                        <h5><br>continue<br></h5>
                        <br>คำสั่ง continue จะข้ามการวนซ้ำปัจจุบันของ loop และทำงานต่อด้วยการวนซ้ำครั้งต่อไป ไวยากรณ์ของมันคือ<br>
                        <img src="https://drive.google.com/uc?id=1mN818sBs3hT8v2hG7Uas5bRuUGmMAYOa">
                        <br>คำสั่ง continue นี้มักใช้กับคำสั่ง if...else<br>
                        <h5><br>How continue statement works?<br></h5>
                        <img src="https://drive.google.com/uc?id=1CT6vK6Mlpx8-qjy0HedJdFLZrkBFK0Hr">
                        <br>Example 2: continue statement<br>
                        <img src="https://drive.google.com/uc?id=1dj3MiLvzoB4UfjJdS1N5t6eaCRQiZ8EU">
                        <br>Output<br>
                        <img src="https://drive.google.com/uc?id=1_khPsO1eHk2XncYnQEvLbNLLTCz_NHcP">
                        <br>ในโปรแกรมนี้ เมื่อผู้ใช้ป้อนค่าบวกผลรวมจะถูกคำนวณโดยใช้คำสั่ง sum += number;<br>
                        <br>เมื่อผู้ใช้ป้อนค่าลบคำสั่ง continue จะทำงานและจะข้ามค่าลบจากการคำนวณ<br>
                        <br><br>
                        <iframe width="480" height="320" src="https://www.youtube.com/embed/obJcPlAtGVM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                        <br id="switch_case">
                    </div>
                </div>
        <br></div>
        <!--   Identifier -->
            <div id="collapseIntroduce" class="accordion-collapse collapse show" data-bs-parent="#accordionParentSyntax">
                <h2>switch - case</h2>
                <!--   ## -->
                <div class="box bg-light  mb-5 shadow" >
                    <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">
                        <h2 id = 'Introduce'> Switch </h2>
                        <br>ในบทนี้ จะได้เรียนรู้การสร้างคำสั่ง switch ในการเขียนโปรแกรม C โดยใช้ตัวอย่างคำสั่ง switch ช่วยให้เราสามารถดำเนินการบล็อกโค้ดหนึ่งบล็อกจากทางเลือกอื่นๆ มากมาย<br>
                        <br>เราสามารถทำสิ่งเดียวกันกับบันได if...else..if ได้ อย่างไรก็ตามไวยากรณ์ของคำสั่ง switch นั้นอ่านและเขียนได้ง่ายกว่ามาก<br>
                        <h5><br>Syntax of switch...case+<br></h5>
                        <img src="https://drive.google.com/uc?id=1wrxwtpGgXfqduN0a-1KRgrYmugEiHT7o">
                        <h5><br>How does the switch statement work?<br></h5>
                        <br>Expression ได้รับการประเมินครั้งเดียวและเปรียบเทียบกับค่าของแต่ละเงื่อนไข<br>
                        <br>- หากมีการตรวจสอบว่าตรงกับเงื่อนไขไหน คำสั่งที่เกี่ยวข้องจะทำงานหลังจากตรวจสอบที่ตรงกัน ตัวอย่างเช่น หากค่าของนิพจน์เท่ากับค่าคงที่ 2 คำสั่ง after case constant2 จะถูกดำเนินการจนกว่า break จะพบ<br>
                        <br>- หากไม่มีการจับคู่ คำสั่งเริ่มต้นจะถูกดำเนินการ<br>
                        <br>หมายเหตุ : ถ้าเราไม่ใช้คำสั่ง break นั้น คำสั่งทั้งหมดหลังจากเงื่อนไขที่ตรงกันก็จะถูกดำเนินการด้วย default ประโยคภายในคำสั่ง switch เป็นทางเลือก<br>
                        <h5><br>switch Statement Flowchart<br></h5>
                        <img src="https://drive.google.com/uc?id=1VToH_19bFvkG9WjDGRe1nntb23zgyN_D">
                        <br>Example: Simple Calculator<br>
                        <img src="https://drive.google.com/uc?id=1m-N0pUztD07fuRuPSe_LvStxJ2rSUiNy">
                        <br>Output<br>
                        <img src="https://drive.google.com/uc?id=1JGnlRFMHE5sR64Mzmb5W-IFMhyFycRnj">
                        <br><br>
                        <iframe width="480" height="320" src="https://www.youtube.com/embed/37GG-T6B7bc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                        <br id="goto_statement">
                    </div>
                </div>
        <br></div>
        <!--   Name Rule -->
            <div id="collapseIntroduce" class="accordion-collapse collapse show" data-bs-parent="#accordionParentSyntax">
                <h2>goto statement</h2>
                <!--   ## -->
                <div class="box bg-light  mb-5 shadow" >
                    <div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-offset="0" class="scrollspy-example" tabindex="0">
                        <h2 id = 'Introduce'> goto statement </h2>
                        <br>ในบทนี้ จะได้เรียนรู้การสร้างคำสั่ง goto ในการเขียนโปรแกรม C นอกจากนี้ จะได้เรียนรู้ว่าเมื่อใดควรใช้คำสั่ง goto และเมื่อใดไม่ควรใช้<br>
                        <br>คำสั่ง goto ช่วยให้เราสามารถถ่ายโอนการควบคุมของโปรแกรมไปยังที่ระบุเลเบล<br>
                        <h5><br>Syntax of goto Statement<br></h5>
                        <img src="https://drive.google.com/uc?id=1OTGsU8afWgpZiBzHNBz58elZZA9RY6h-">
                        <br>Label เป็นตัวระบุ เมื่อ goto พบคำสั่ง การควบคุมของโปรแกรมจะข้ามไป label และเริ่มรันโค้ด<br>
                        <img src="https://drive.google.com/uc?id=1XnSMX_svYfbZ4GljxyQnchZXpuLeTGch">
                        <br>Example: goto Statement<br>
                        <img src="https://drive.google.com/uc?id=1FgjzWxcwnXbIoKR4wc0EK21AimpjZ1jP">
                        <br>Output<br>
                        <img src="https://drive.google.com/uc?id=1m2gD7Wqy6Sd_L3UXguFmY2yOfNBciQ-x">
                        <br>การใช้gotoคำสั่งอาจนำไปสู่โค้ดที่ผิดพลาดและติดตามได้ยาก ตัวอย่างเช่น<br>
                        <img src="https://drive.google.com/uc?id=1FCE5s2IaRSEjgnuVQNY6e3gHK17MnlUD">
                        <br>นอกจากนี้คำสั่ง goto ยังให้เราทำสิ่งที่ไม่ดีได้ เช่น กระโดดออกจากขอบเขตที่ถูกกล่าวว่า goto อาจมีประโยชน์บางครั้ง ตัวอย่างเช่น เพื่อแยกจาก loop ที่ซ้อนกัน<br>
                        <h5><br>Should you use goto?<br></h5>
                        <br>ถ้าคิดว่าการใช้คำสั่ง goto ทำให้โปรแกรมง่ายขึ้น เราสามารถใช้มันได้ ที่กล่าวว่า goto ไม่ค่อยมีประโยชน์และเราสามารถสร้างโปรแกรม C ใด ๆ ได้โดยไม่ต้องใช้ goto เลย นี่คือคำพูดจาก Bjarne Stroustrup ผู้สร้าง C++ ว่า"ความจริงที่ว่า 'goto' ทำอะไรก็ได้คือเหตุผลที่เราไม่ใช้มัน"<br>
                        <br><br>
                        <iframe width="480" height="320" src="https://www.youtube.com/embed/msbzFUQ4LrQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                    </div>
                </div>
        </div>
        
        <button onclick="window.location.href='/course-Flow_Control-quiz'" type="button" class="btn btn-outline-secondary btn-lg btn-block bg-light shadow" style="color:black" ><h2><u>แบบทดสอบย่อย</h2></u></button>
        

        

        <br></div>
        </div>
    </div>


    <!-- END Of MIDDLE  -->
    </body>
</html>


